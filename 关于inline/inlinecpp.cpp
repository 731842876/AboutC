#include <iostream>
#include "test.h"
using namespace std;


// @File      : inlinecpp
// @Author    : ATLAS
// @brief     : 内联能提高函数效率，但并不是所有的函数都定义成内联函数！
//				内联是以代码膨胀(复制)为代价，仅仅省去了函数调用的开销，从而提高函数的执行效率。
// @Time      : 2021/6/28 17:57:40


//如果执行函数体内代码的时间相比于函数调用的开销较大，那么效率的收货会更少！
//另一方面，每一处内联函数的调用都要复制代码，将使程序的总代码量增大，消耗更多的内存空间。

//
//以下情况不宜用内联：
//
//（1）如果函数体内的代码比较长，使得内联将导致内存消耗代价比较高。
//
//（2）如果函数体内出现循环，那么执行函数体内代码的时间要比函数调用的开销大。


inline void A::f1(int x){}
//int main() {
//	
//}